security:
    # permet d'encrypter les mots de passe des utilisateurs
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        # permet de dire au firewall d'aller checher les utilisateurs dans la base de données par email
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # utilise le provider défini précédemment
            provider: in_database

            # défini le mode de connexion par un formulaire
            form_login:
                # renseigne le chemin du formulaire et le vérification
                login_path: security_connexion
                check_path: security_connexion

            # défini le mode de déconnexion
            logout:
                # renseigne le chemin de déconnexion et la redirection
                path: security_deconnexion
                target: home
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # autorise l'accès aux pages de connection et d'inscription seulement au personne non connecté
        - { path: ^/connexion, allow_if: "not is_granted('ROLE_USER')" }
        - { path: ^/inscription, allow_if: "not is_granted('ROLE_USER')" }
        # autorise l'accès aux pages de profil et de déconnection seulement au personne connecté
        - { path: ^/profil, roles: ROLE_USER }
        - { path: ^/deconnexion, roles: ROLE_USER }        
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    # redirige l'utilisateur vers la page d'accueil s'il tente d'accéder à une page non autorisé pour lui
    access_denied_url: /
